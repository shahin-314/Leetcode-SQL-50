

### Problem samajh:

* **Students table** â†’ kaun-kaun students hai
* **Subjects table** â†’ school ke subjects
* **Examinations table** â†’ kis student ne kis subject ka exam attend kiya (duplicates possible kyunki ek hi exam multiple times ho sakta hai)

ðŸ‘‰ Hume chahiye:

* **Har student Ã— har subject** ka record
* Aur kitni baar us student ne us subject ka exam attend kiya hai (`COUNT`)
* Agar exam attend hi nahi kiya â†’ to `0` dikhna chahiye

---

### SQL Query Solution:

```sql
SELECT 
    s.student_id,
    s.student_name,
    sub.subject_name,
    COUNT(e.subject_name) AS attended_exams
FROM Students s
CROSS JOIN Subjects sub
LEFT JOIN Examinations e
  ON s.student_id = e.student_id 
 AND sub.subject_name = e.subject_name
GROUP BY s.student_id, s.student_name, sub.subject_name
ORDER BY s.student_id, sub.subject_name;
```

---

### Step by Step Explanation:

1. **`CROSS JOIN Subjects sub`**

   * Har student ke liye **sabhi subjects ka combination** ban jaata hai.
   * Example: Alice ke liye â†’ Math, Physics, Programming sabhi aayenge.
   * Bob ke liye bhi sab subjects aayenge, chahe exam diya ho ya nahi.

---

2. **`LEFT JOIN Examinations e ...`**

   * Ab student Ã— subject combination ko Examinations table se match karte hain.
   * Agar student ne exam diya hai to records match kar jaayenge.
   * Agar nahi diya, to exam wali side `NULL` ho jaayegi (aur count `0` ban jaayega).

---

3. **`COUNT(e.subject_name)`**

   * Agar exam diya gaya hoga â†’ ek ya multiple rows milenge â†’ count karega.
   * Agar exam nahi diya â†’ `e.subject_name` NULL hoga â†’ `COUNT` 0 return karega.

---

4. **`GROUP BY`**

   * Har student aur har subject pe grouping karte hain â†’ taaki count nikal sake.

---

5. **`ORDER BY s.student_id, sub.subject_name`**

   * Output ko sorted karna hai student\_id aur subject\_name ke according.

---

### Example Output (same as problem statement):

| student\_id | student\_name | subject\_name | attended\_exams |
| ----------- | ------------- | ------------- | --------------- |
| 1           | Alice         | Math          | 3               |
| 1           | Alice         | Physics       | 2               |
| 1           | Alice         | Programming   | 1               |
| 2           | Bob           | Math          | 1               |
| 2           | Bob           | Physics       | 0               |
| 2           | Bob           | Programming   | 1               |
| 6           | Alex          | Math          | 0               |
| 6           | Alex          | Physics       | 0               |
| 6           | Alex          | Programming   | 0               |
| 13          | John          | Math          | 1               |
| 13          | John          | Physics       | 1               |
| 13          | John          | Programming   | 1               |

---

### ðŸ”‘ Kyon LEFT JOIN + CROSS JOIN?

* **CROSS JOIN** â†’ har student Ã— har subject combination banane ke liye (chahe exam diya ho ya nahi).
* **LEFT JOIN** â†’ us combination ko Examinations se match karne ke liye. Agar exam diya nahi hoga to bhi student-subject record preserve rahe.

ðŸ‘‰ Agar INNER JOIN use karte, to sirf wahi combinations dikhte jaha exam diya gaya tha. Lekin hume **0 attendance bhi dikhana hai**, isliye `LEFT JOIN` lagana zaruri hai.

---

Bhai, kya tu chahta hai mai iska ek **visual grid (Students Ã— Subjects cross table)** bana ke samjhau taaki aur clear ho jaaye?
